--  GNAT Project file used to build the GNAT Programming System
--  Copyright (c) 2006, 2008 Ludovic Brenta <ludovic@ludovic-brenta.org>
--  Copyright (c) 2012-2018 Nicolas Boulenguez <nicolas@debian.org>

--  This program is free software; you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation; either version 2 of the License, or
--  (at your option) any later version.

--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.

--  The full text of the GPL is in /usr/share/common-licenses/GPL on
--  Debian systems.

--  This project file bypasses the complex structure of project files
--  importing and including each other, brittle configure scripts,
--  evil recursive Makefiles and Makefile fragments supplied by
--  AdaCore.  Now there is just one Makefile (debian/rules), and one
--  project file, which you are now reading.  This radical
--  simplification is the Tao of Programming.  In this file, I do away
--  with all the flexibility and configurability of upstream's build
--  machinery.  I don't need them.  I only care about Debian.

--  Now, if you go to the top level of the directory and just call
--  debian/rules with no arguments, you get The Right Thing.
--  Similarly calling "gnatmake -Pgps" does The Right Thing for the
--  Ada part of GPS.

--  An added benefit of this setup is that all object files go in one
--  directory, and the .ali files go there too.  This makes it very
--  easy for Emacs' Ada mode to navigate the large code base of GPS.

with "gnatcoll.gpr";
with "gnatcoll_python.gpr";
with "gnatcoll_sqlite.gpr";
with "gnatcoll_xref.gpr";
with "gnatprj.gpr";
with "gtkada.gpr";
with "templates_parser.gpr";
with "xmlada_dom.gpr";
with "xmlada_input.gpr";
with "xmlada_sax.gpr";
with "xmlada_unicode.gpr";

project Build_Gps is

   for Languages use ("Ada", "C");
   for Source_Dirs use ("../ada_module/core/src",
                        "../ada_module/ui/src",
                        "../ada_module/ui/src",
                        "../aliases/src",
                        "../browsers/src",
                        "../builder/core/src",
                        "../builder/src",
                        "../cli/src",
                        "../code_analysis/bt",
                        "../code_analysis/orm-gen",
                        "../code_analysis/src",
                        "../codefix/core/src",
                        "../codefix/ui/src",
                        "../common/core/src",
                        "../common/ui/src",
                        "../completion/core/src",
                        "../completion/ui/src",
                        "../cpp_module/src",
                        "../custom/src",
                        "../gnatcoll_extras/src",
                        "../gnatdoc/src",
                        "../gnattest/src",
                        "../gps/src",
                        "../gvd/src",
                        "../help/src",
                        "../kernel/generated", --  generated by rules.
                        "../kernel/src",
                        "../kernel/src_info",
                        "../keymanager/src",
                        --  "../lal/core", requires libadalang quex langkit
                        --  "../lal/ui",
                        "../language/src",
                        "../language/ui/src",
                        "../libclang/gen", --  generated by rules.
                        "../libclang/libclang",
                        "../memory_usage/src",
                        "../navigation/src",
                        "../prj_editor/core/src",
                        "../prj_editor/src",
                        "../python/core",
                        "../python/src",
                        "../refactoring/core/src",
                        "../refactoring/ui/src",
                        "../remote/src",
                        "../shell/src",
                        "../socket/src",
                        "../src_editor/src",
                        "../toolchains/src",
                        "../toolchains_editor/core/src",
                        "../valgrind/core",
                        "../vcs/src",
                        "../vcs2/src",
                        "../vdiff/src",
                        "../vfs/src",
                        "../views/src",
                        "../vsearch/src",
                        "../widgets/src");
   for Object_Dir use "../obj";
   for Exec_Dir use "../obj";
   for Main use ("gnatdoc_main.adb",
                 "gps-cli.adb",
                 "gps-main.adb");

   package Linker is
      for Leading_Switches ("Ada") use External_As_List ("LDFLAGS", " ");
      for Switches ("Ada") use External_As_List ("PKG_CONFIG_LIBS", " ")
        & External_As_List ("LIBS", " ");
   end Linker;

   package Compiler is
      for Switches ("Ada") use
        ("-gnatfno", "-gnatVa") &
        External_As_List ("ADAFLAGS", " ");
      for Switches ("s-memory.adb") use
        Compiler'Switches ("Ada") & ("-gnatpg");
      for Switches ("C") use
        External_As_List ("CFLAGS", " ") &
        External_As_List ("CPPFLAGS", " ") &
        External_As_List ("PKG_CONFIG_CFLAGS", " ");
   end Compiler;

   package Builder is
      for Executable ("gnatdoc_main.adb") use "gnatdoc";
      for Executable ("gps-cli.adb") use "gps_cli";
      for Executable ("gps-main.adb") use "gnat-gps";
   end Builder;

   package Naming is
      for Implementation ("Help_Module.Display_Help") use "help_module-display_help_unix.adb";
      for Implementation ("Src_Printing.Fabric") use "src_printing-fabric__default.adb";
      for Implementation ("src_printing.win32_printer") use "src_printing-dummy.adb";
      Deb_Host_Gnu_Type := External ("DEB_HOST_GNU_TYPE");
      case Deb_Host_Gnu_Type is
         when "x86_64-linux-gnu" =>
            for Body ("GPS.Valgrind.Binding") use "gps-valgrind-binding__amd64.adb";
         when "x86-linux-gnu" =>
            for Body ("GPS.Valgrind.Binding") use "gps-valgrind-binding__x86.adb";
         when others =>
            for Body ("GPS.Valgrind.Binding") use "gps-valgrind-binding__null.adb";
      end case;
   end Naming;

end Build_Gps;
